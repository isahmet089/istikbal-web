<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Canlı Sistem Logları</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <style>
        body { background: #0f1419; color: #e6edf3; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
        .log-container { background: #161b22; border-radius: 12px; border: 1px solid #30363d; height: 80vh; overflow-y: auto; padding: 20px; }
        .log-entry { padding: 8px 12px; margin: 4px 0; border-radius: 6px; border-left: 4px solid; font-family: 'Courier New', monospace; font-size: 13px; line-height: 1.4; }
        .log-info { background: rgba(56, 139, 253, 0.1); border-left-color: #388bfd; }
        .log-success { background: rgba(46, 160, 67, 0.1); border-left-color: #2ea043; }
        .log-warning { background: rgba(187, 128, 9, 0.1); border-left-color: #bb8009; }
        .log-error { background: rgba(248, 81, 73, 0.1); border-left-color: #f85149; }
        .log-user_action { background: rgba(138, 84, 255, 0.1); border-left-color: #8a54ff; }
        .log-system_action { background: rgba(255, 123, 114, 0.1); border-left-color: #ff7b72; }
        .log-batch_action { background: rgba(121, 184, 255, 0.1); border-left-color: #79b8ff; }
        .log-health_check { background: rgba(130, 80, 223, 0.1); border-left-color: #8250df; }
        .status-card { background: #21262d; border: 1px solid #30363d; border-radius: 8px; padding: 15px; margin-bottom: 20px; }
        .status-indicator { width: 12px; height: 12px; border-radius: 50%; display: inline-block; margin-right: 8px; }
        .status-online { background: #2ea043; }
        .status-offline { background: #f85149; }
        .status-warning { background: #bb8009; }
        .filter-buttons { margin-bottom: 15px; }
        .filter-btn { margin: 2px; padding: 6px 12px; border-radius: 6px; border: 1px solid #30363d; background: #21262d; color: #e6edf3; font-size: 12px; }
        .filter-btn.active { background: #388bfd; border-color: #388bfd; }
        .log-timestamp { color: #7d8590; font-size: 11px; }
        .log-message { color: #e6edf3; font-weight: 500; }
        .log-details { color: #7d8590; font-size: 11px; margin-top: 4px; }
        .auto-scroll-indicator { position: fixed; bottom: 20px; right: 20px; background: #21262d; border: 1px solid #30363d; border-radius: 6px; padding: 8px 12px; font-size: 12px; z-index: 1000; }
        .connection-status { position: fixed; top: 20px; right: 20px; padding: 8px 12px; border-radius: 6px; font-size: 12px; z-index: 1000; }
        .connected { background: rgba(46, 160, 67, 0.2); color: #2ea043; }
        .disconnected { background: rgba(248, 81, 73, 0.2); color: #f85149; }
    </style>
</head>
<body>
    <div class="container-fluid p-4">
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <h2><i class="bi bi-terminal"></i> Canlı Sistem Logları</h2>
                    <div class="d-flex gap-3">
                        <a href="/" class="btn btn-outline-light">
                            <i class="bi bi-arrow-left"></i> Dashboard
                        </a>
                        <button id="clearLogs" class="btn btn-outline-warning">
                            <i class="bi bi-trash"></i> Logları Temizle
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="status-card">
                    <div class="d-flex align-items-center">
                        <span class="status-indicator" id="systemStatus"></span>
                        <strong>Sistem Durumu</strong>
                    </div>
                    <div class="mt-2" id="systemStatusText">Kontrol ediliyor...</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="status-card">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-people me-2"></i>
                        <strong>Aktif Kullanıcılar</strong>
                    </div>
                    <div class="mt-2" id="activeUsers">0</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="status-card">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-clock me-2"></i>
                        <strong>Son Güncelleme</strong>
                    </div>
                    <div class="mt-2" id="lastUpdate">-</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="status-card">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-wifi me-2"></i>
                        <strong>Bağlantı</strong>
                    </div>
                    <div class="mt-2" id="connectionStatus">Bağlanıyor...</div>
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-12">
                <div class="filter-buttons">
                    <button class="filter-btn active" data-filter="all">Tümü</button>
                    <button class="filter-btn" data-filter="info">Bilgi</button>
                    <button class="filter-btn" data-filter="success">Başarılı</button>
                    <button class="filter-btn" data-filter="warning">Uyarı</button>
                    <button class="filter-btn" data-filter="error">Hata</button>
                    <button class="filter-btn" data-filter="user_action">Kullanıcı İşlemleri</button>
                    <button class="filter-btn" data-filter="system_action">Sistem İşlemleri</button>
                    <button class="filter-btn" data-filter="batch_action">Batch İşlemleri</button>
                    <button class="filter-btn" data-filter="health_check">Sağlık Kontrolü</button>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="log-container" id="logContainer">
                    <div class="text-center text-muted">
                        <i class="bi bi-hourglass-split"></i>
                        <br>Loglar yükleniyor...
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="auto-scroll-indicator" id="autoScrollIndicator" style="display:none;">
        Otomatik kaydırma açık
    </div>
    <div class="connection-status connected" id="wsStatus" style="display:none;">
        WebSocket bağlı
    </div>
    <div class="connection-status disconnected" id="wsStatusDisconnected" style="display:none;">
        WebSocket bağlantısı yok!
    </div>
    <script>
        const logContainer = document.getElementById('logContainer');
        const wsStatus = document.getElementById('wsStatus');
        const wsStatusDisconnected = document.getElementById('wsStatusDisconnected');
        const autoScrollIndicator = document.getElementById('autoScrollIndicator');
        const filterButtons = document.querySelectorAll('.filter-btn');
        let logBuffer = [];
        let currentFilter = 'all';
        let autoScroll = true;
        let ws;
        function connectWebSocket() {
            ws = new WebSocket(`ws://${window.location.host}/logs`);
            ws.onopen = () => {
                wsStatus.style.display = 'block';
                wsStatusDisconnected.style.display = 'none';
                document.getElementById('connectionStatus').textContent = 'Bağlı';
            };
            ws.onclose = () => {
                wsStatus.style.display = 'none';
                wsStatusDisconnected.style.display = 'block';
                document.getElementById('connectionStatus').textContent = 'Bağlantı yok!';
                setTimeout(connectWebSocket, 3000);
            };
            ws.onerror = () => {
                wsStatus.style.display = 'none';
                wsStatusDisconnected.style.display = 'block';
                document.getElementById('connectionStatus').textContent = 'Bağlantı hatası!';
            };
            ws.onmessage = (event) => {
                const msg = JSON.parse(event.data);
                if (msg.type === 'log') {
                    logBuffer.push(msg.data);
                    renderLogs();
                } else if (msg.type === 'log_buffer') {
                    logBuffer = msg.data;
                    renderLogs();
                } else if (msg.type === 'system_status') {
                    updateSystemStatus(msg.data);
                }
            };
        }
        connectWebSocket();
        function renderLogs() {
            logContainer.innerHTML = '';
            const filtered = logBuffer.filter(log => currentFilter === 'all' || log.level === currentFilter);
            filtered.forEach(log => {
                const div = document.createElement('div');
                div.className = `log-entry log-${log.level}`;
                div.innerHTML = `
                    <span class="log-timestamp">${new Date(log.timestamp).toLocaleTimeString('tr-TR')}</span>
                    <span class="log-message">${log.message}</span>
                    ${log.data && Object.keys(log.data).length ? `<div class="log-details">${JSON.stringify(log.data)}</div>` : ''}
                `;
                logContainer.appendChild(div);
            });
            if (autoScroll) {
                logContainer.scrollTop = logContainer.scrollHeight;
                autoScrollIndicator.style.display = 'block';
            } else {
                autoScrollIndicator.style.display = 'none';
            }
            document.getElementById('lastUpdate').textContent = new Date().toLocaleTimeString('tr-TR');
        }
        filterButtons.forEach(btn => {
            btn.addEventListener('click', () => {
                filterButtons.forEach(b => b.classList.remove('active'));
                btn.classList.add('active');
                currentFilter = btn.dataset.filter;
                renderLogs();
            });
        });
        logContainer.addEventListener('scroll', () => {
            autoScroll = logContainer.scrollTop + logContainer.clientHeight >= logContainer.scrollHeight - 10;
        });
        function updateSystemStatus(status) {
            const statusEl = document.getElementById('systemStatus');
            const statusText = document.getElementById('systemStatusText');
            if (status === 'online') {
                statusEl.className = 'status-indicator status-online';
                statusText.textContent = 'Çalışıyor';
            } else if (status === 'warning') {
                statusEl.className = 'status-indicator status-warning';
                statusText.textContent = 'Uyarı';
            } else {
                statusEl.className = 'status-indicator status-offline';
                statusText.textContent = 'Kapalı';
            }
        }
        document.getElementById('clearLogs').addEventListener('click', () => {
            logBuffer = [];
            renderLogs();
        });
    </script>
</body>
</html> 